version: 2.1

orbs: 
  sonarcloud: sonarsource/sonarcloud@2.0.0
  snyk: snyk/snyk@1.5.0

executors:
  android-executor:
    docker:
      - image: cimg/android:2025.04 
    working_directory: ~/library-app
    environment:
      GRADLE_OPTS: -Xmx3200m -Dorg.gradle.daemon=false
      JVM_OPTS: -Xmx3200m

commands:
  fix-gradlew:
    steps:
      - run: sed -i 's/\r$//' gradlew && chmod +x gradlew

  restore-gradle-cache:
    steps:
      - restore_cache:
          keys:
            - v1-gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - v1-gradle-

  save-gradle-cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v1-gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

jobs:
  build:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Crear local.properties
          command: echo "sdk.dir=/opt/android/sdk" > local.properties
      - fix-gradlew
      - restore-gradle-cache
      - run: 
          name: Análisis estático
          command: ./gradlew detekt ktlintCheck spotlessCheck
      - save-gradle-cache
      - store_artifacts: 
          path: build/reports/detekt
          destination: detekt-reports

  build-and-test:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Crear local.properties
          command: echo "sdk.dir=/opt/android/sdk" > local.properties
      - fix-gradlew
      - restore-gradle-cache
      - run: 
          name: Ejecutar tests y generar reportes
          command: |
            ./gradlew testDebugUnitTest
            ./gradlew koverXmlReport
      - run:
          name: Verificar reportes Kover generados
          command: |
            echo "=== Buscando reportes Kover ==="
            find build -path "*/kover/*" -name "*.xml" -type f 2>/dev/null || echo "No se encontraron reportes Kover"
            echo "=== Estructura de reports ==="
            ls -la build/reports/ 2>/dev/null || echo "No hay directorio reports"
      - save-gradle-cache
      - run: 
          name: Preparar workspace con reportes Kover
          command: |
            mkdir -p tmp-workspace
            
            # Buscar archivo de cobertura de Kover
            if [ -f "build/reports/kover/xml/report.xml" ]; then
              echo "✅ Encontrado reporte Kover"
              cp build/reports/kover/xml/report.xml tmp-workspace/kover-report.xml
            else
              echo "⚠️ No se encontró reporte Kover, creando archivo dummy"
              echo "<coverage></coverage>" > tmp-workspace/dummy-coverage.xml
            fi
            
            # Mostrar qué se va a persistir
            echo "=== Archivos a persistir ==="
            ls -la tmp-workspace/
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports
          destination: kover-reports
      - persist_to_workspace:
          root: tmp-workspace
          paths:
            - "*.xml"

  sonarcloud-analysis:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Crear local.properties
          command: echo "sdk.dir=/opt/android/sdk" > local.properties
      - attach_workspace:
          at: workspace-files
      - run:
          name: Verificar archivos del workspace
          command: |
            echo "=== Archivos recibidos del workspace ==="
            ls -la workspace-files/ 2>/dev/null || echo "No hay archivos del workspace"
      - sonarcloud/scan:
          sonar_token_variable_name: SONAR_TOKEN

  snyk-analysis:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Crear local.properties
          command: echo "sdk.dir=/opt/android/sdk" > local.properties
      - attach_workspace:
          at: workspace-files
      - snyk/scan:
          fail-on-issues: false

workflows:
  library-ci:
    jobs:
      - build
      - build-and-test:
          requires:
            - build
      - sonarcloud-analysis:
          requires:
            - build-and-test
      - snyk-analysis:
          requires:
            - build-and-test