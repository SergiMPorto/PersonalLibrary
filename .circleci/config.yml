version: 2.1

orbs: 
  gradle: circleci/gradle@3.0.0
  sonarcloud: sonarsource/sonarcloud@2.0.0
  snyk: snyk/snyk@1.5.0

executors:
  kotlin-executor:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/library-app
    environment:
      GRADLE_OPTS: -Xmx3200m -Dorg.gradle.daemon=false
      JVM_OPTS: -Xmx3200m

commands:
  # Los comandos de cach√© ya no son necesarios con el orb de Gradle
  setup-workspace:
    steps:
      - checkout
      - attach_workspace:
          at: .

jobs:
  build:
    executor: kotlin-executor
    steps:
      - checkout
      - gradle/with_cache:
          steps:
            - gradle/run:
                command: detekt
            - gradle/run:
                command: ktlintCheck  
            - gradle/run:
                command: spotlessCheck
            - gradle/run:
                command: dependencyCheckAnalyze
      - store_artifacts: 
          path: build/reports/detekt
          destination: detekt-reports
      - store_artifacts: 
          path: build/reports/dependency-check-report.html
          destination: security-reports

  build-and-test:
    executor: kotlin-executor
    steps:
      - checkout
      - gradle/with_cache:
          steps:
            - gradle/run:
                command: build -x test
            - gradle/test
            - gradle/run:
                command: jacocoTestReport
            - gradle/run:
                command: koverXmlReport
      - store_test_results: 
          path: build/test-results
      - store_artifacts: 
          path: build/reports/tests
          destination: test-reports
      - store_artifacts: 
          path: build/reports/jacoco
          destination: coverage-reports
      - persist_to_workspace:
          root: .
          paths:
            - build/reports/kover/xml/report.xml
      - save-gradle-cache
      - store_test_results: 
          path: build/test-results
      - store_artifacts: 
          path: build/reports/tests
          destination: test-reports
      - store_artifacts: 
          path: build/reports/jacoco
          destination: coverage-reports
      - persist_to_workspace:
          root: .
          paths:
            - build/reports/kover/xml/report.xml

  sonarcloud-analysis:
    executor: kotlin-executor
    steps:
      - setup-workspace
      - sonarcloud/scan:
          sonar_token_variable_name: SONAR_TOKEN

  snyk-analysis:
    executor: kotlin-executor
    steps:
      - setup-workspace
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: false
          token-variable: SNYK_TOKEN
      - store_artifacts:
          path: build/reports/snyk
          destination: security-reports

workflows:
  library-ci:
    jobs:
      - build
      - build-and-test:
          requires:
            - build
      - sonarcloud-analysis:
          requires:
            - build-and-test
      - snyk-analysis:
          requires:
            - build-and-test